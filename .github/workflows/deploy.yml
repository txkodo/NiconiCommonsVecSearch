name: Deploy to Railway and Vercel

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    outputs:
      backend-url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway
        id: deploy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway up --service backend
          echo "url=$(railway status --json | jq -r '.deployments[0].url')" >> $GITHUB_OUTPUT

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build
        working-directory: frontend
        env:
          VITE_API_URL: ${{ needs.deploy-backend.outputs.backend-url }}
        run: npm run build
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: frontend
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}

  test-deployment:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    
    steps:
      - name: Test Backend Health
        run: |
          if [ -n "${{ needs.deploy-backend.outputs.backend-url }}" ]; then
            curl -f "${{ needs.deploy-backend.outputs.backend-url }}/health" || exit 1
            echo "‚úÖ Backend health check passed"
          else
            echo "‚ö†Ô∏è Backend URL not available for testing"
          fi
      
      - name: Test API Endpoints
        run: |
          if [ -n "${{ needs.deploy-backend.outputs.backend-url }}" ]; then
            # Test basic API endpoints when they're implemented
            echo "üß™ API endpoint tests would go here"
            echo "Backend URL: ${{ needs.deploy-backend.outputs.backend-url }}"
          fi